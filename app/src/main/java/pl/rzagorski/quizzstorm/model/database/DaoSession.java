package pl.rzagorski.quizzstorm.model.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryDaoConfig;
    private final DaoConfig photoDaoConfig;
    private final DaoConfig quizRatesDaoConfig;
    private final DaoConfig rateDaoConfig;
    private final DaoConfig answerDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig quizResultDaoConfig;
    private final DaoConfig quizDaoConfig;

    private final CategoryDao categoryDao;
    private final PhotoDao photoDao;
    private final QuizRatesDao quizRatesDao;
    private final RateDao rateDao;
    private final AnswerDao answerDao;
    private final QuestionDao questionDao;
    private final QuizResultDao quizResultDao;
    private final QuizDao quizDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        photoDaoConfig = daoConfigMap.get(PhotoDao.class).clone();
        photoDaoConfig.initIdentityScope(type);

        quizRatesDaoConfig = daoConfigMap.get(QuizRatesDao.class).clone();
        quizRatesDaoConfig.initIdentityScope(type);

        rateDaoConfig = daoConfigMap.get(RateDao.class).clone();
        rateDaoConfig.initIdentityScope(type);

        answerDaoConfig = daoConfigMap.get(AnswerDao.class).clone();
        answerDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        quizResultDaoConfig = daoConfigMap.get(QuizResultDao.class).clone();
        quizResultDaoConfig.initIdentityScope(type);

        quizDaoConfig = daoConfigMap.get(QuizDao.class).clone();
        quizDaoConfig.initIdentityScope(type);

        categoryDao = new CategoryDao(categoryDaoConfig, this);
        photoDao = new PhotoDao(photoDaoConfig, this);
        quizRatesDao = new QuizRatesDao(quizRatesDaoConfig, this);
        rateDao = new RateDao(rateDaoConfig, this);
        answerDao = new AnswerDao(answerDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        quizResultDao = new QuizResultDao(quizResultDaoConfig, this);
        quizDao = new QuizDao(quizDaoConfig, this);

        registerDao(Category.class, categoryDao);
        registerDao(Photo.class, photoDao);
        registerDao(QuizRates.class, quizRatesDao);
        registerDao(Rate.class, rateDao);
        registerDao(Answer.class, answerDao);
        registerDao(Question.class, questionDao);
        registerDao(QuizResult.class, quizResultDao);
        registerDao(Quiz.class, quizDao);
    }
    
    public void clear() {
        categoryDaoConfig.getIdentityScope().clear();
        photoDaoConfig.getIdentityScope().clear();
        quizRatesDaoConfig.getIdentityScope().clear();
        rateDaoConfig.getIdentityScope().clear();
        answerDaoConfig.getIdentityScope().clear();
        questionDaoConfig.getIdentityScope().clear();
        quizResultDaoConfig.getIdentityScope().clear();
        quizDaoConfig.getIdentityScope().clear();
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public PhotoDao getPhotoDao() {
        return photoDao;
    }

    public QuizRatesDao getQuizRatesDao() {
        return quizRatesDao;
    }

    public RateDao getRateDao() {
        return rateDao;
    }

    public AnswerDao getAnswerDao() {
        return answerDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public QuizResultDao getQuizResultDao() {
        return quizResultDao;
    }

    public QuizDao getQuizDao() {
        return quizDao;
    }

}
